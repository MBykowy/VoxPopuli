@page
@model VoxPopuli.Pages.Surveys.ResponsesModel
@{
    ViewData["Title"] = $"Responses for {Model.SurveyResponses.Title}";
}

<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="mb-0">@Model.SurveyResponses.Title</h1>
            <p class="text-muted">Survey Responses Overview</p>
        </div>
        <div>
            <a asp-page="List" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Back to Surveys
            </a>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-6">
                    <h5 class="card-title">Survey Information</h5>
                    <p class="card-text">@Model.SurveyResponses.Description</p>
                    <p class="text-muted">Created: @Model.SurveyResponses.CreatedAt.ToString("MMMM dd, yyyy")</p>
                </div>
               <div class="col-md-6">
                    <div class="text-md-end">
                        <div class="mb-2">
                            <span class="badge bg-primary rounded-pill">
                                <i class="bi bi-people"></i> @Model.SurveyResponses.ResponseCount Responses
                            </span>
                        </div>
                        <form method="post" asp-page-handler="ExportResponsesPdf" asp-route-id="@Model.Id">
                            <button type="submit" class="btn btn-outline-danger">
                                <i class="bi bi-file-pdf"></i> Export to PDF
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (!Model.SurveyResponses.Responses.Any())
    {
        <div class="alert alert-info">
            <i class="bi bi-info-circle me-2"></i>
            No responses have been submitted for this survey yet.
        </div>
    }
    else
    {
        <div class="card mb-4">
            <div class="card-header bg-light">
                <h5 class="card-title mb-0">Response Summary</h5>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-8">
                        <div class="chart-container" style="position: relative; height: 300px;">
                            <canvas id="responseSummaryChart" class="response-chart"></canvas>
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="response-metrics">
                            <div class="card border-light mb-3">
                                <div class="card-body text-center">
                                    <h5 class="text-muted mb-1">Completion Rate</h5>
                                    <h3 class="display-6">@Model.SurveyResponses.CompletionRate%</h3>
                                </div>
                            </div>
                            <div class="card border-light mb-3">
                                <div class="card-body text-center">
                                    <h5 class="text-muted mb-1">Avg. Time to Complete</h5>
                                    <h3 class="display-6">@Model.SurveyResponses.AvgCompletionTime min</h3>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="accordion" id="responsesAccordion">
            @foreach (var response in Model.SurveyResponses.Responses)
            {
                <div class="accordion-item mb-3 border">
                    <h2 class="accordion-header" id="heading_@response.ResponseId">
                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse"
                                data-bs-target="#collapse_@response.ResponseId" aria-expanded="false"
                                aria-controls="collapse_@response.ResponseId">
                            <div class="d-flex w-100 justify-content-between align-items-center">
                                <div>
                                    <strong>Response #@response.ResponseId</strong>
                                    <span class="ms-3">
                                        @if (response.IsAnonymous)
                                        {
                                            <span class="badge bg-secondary">
                                                <i class="bi bi-incognito me-1"></i> Anonymous
                                            </span>
                                        }
                                        else
                                        {
                                            <span>by @response.RespondentName</span>
                                        }
                                    </span>
                                </div>
                                <small class="text-muted">@response.SubmittedAt.ToString("MMM dd, yyyy hh:mm tt")</small>
                            </div>
                        </button>
                    </h2>
                    <!-- Rest of the existing accordion content remains unchanged -->
                </div>
            }
        </div>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            if (document.getElementById('responseSummaryChart')) {
                const responseData = @Html.Raw(Json.Serialize(Model.SurveyResponses.ResponseDateCounts));
                
                const ctx = document.getElementById('responseSummaryChart').getContext('2d');
                new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: responseData.map(item => item.date),
                        datasets: [{
                            label: 'Responses',
                            data: responseData.map(item => item.count),
                            backgroundColor: 'rgba(75, 192, 192, 0.2)',
                            borderColor: 'rgba(75, 192, 192, 1)',
                            borderWidth: 2,
                            tension: 0.4,
                            pointRadius: 4,
                            pointHoverRadius: 6
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    precision: 0
                                }
                            },
                            x: {
                                grid: {
                                    display: false
                                }
                            }
                        },
                        plugins: {
                            title: {
                                display: true,
                                text: 'Response Timeline',
                                font: {
                                    size: 16
                                }
                            },
                            legend: {
                                display: false
                            },
                            tooltip: {
                                callbacks: {
                                    title: function(tooltipItems) {
                                        return tooltipItems[0].label;
                                    },
                                    label: function(context) {
                                        return context.parsed.y + ' responses';
                                    }
                                }
                            }
                        }
                    }
                });
            }
        });
    </script>
}